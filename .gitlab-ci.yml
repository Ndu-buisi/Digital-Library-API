include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/Container-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Jobs/SAST-IaC.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  SAST_EXCLUDED_ANALYZERS: "brakeman,flawfinder,phpcs-security-audit,pmd-apex,sobelow,spotbugs"

stages:
  - build
  - test
  - security
  - deploy

build:
  stage: build
  image: node:18-alpine
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run build
    - echo "Building container image..."
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 hour
  cache:
    paths:
      - .npm/

test:unit:
  stage: test
  image: node:18-alpine
  script:
    - npm run test:unit
  coverage: '/Lines\s*:\s*(\d+\.\d+)%/'

test:pr-only:
  stage: test
  image: node:18-alpine
  script:
    - echo "This job only runs on GitHub Pull Requests"
    - npm run test:pr-specific || echo "PR-specific tests would run here"
  rules:
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"

security_gate:
  stage: security
  image: alpine:latest
  script:
    - apk add --no-cache jq
    - echo "Evaluating security scan results..."
    - |
      if [ -f gl-dependency-scanning-report.json ]; then
        CRITICAL_VULNS=$(jq '.vulnerabilities[]? | select(.severity=="Critical")' gl-dependency-scanning-report.json 2>/dev/null | jq -s length)
        echo "Critical vulnerabilities found: ${CRITICAL_VULNS:-0}"
        if [ "${CRITICAL_VULNS:-0}" -gt 0 ]; then
          echo "❌ Critical vulnerabilities detected. Deployment blocked."
          exit 1
        fi
      fi
    - echo "✅ Security gate passed"
  dependencies:
    - gemnasium-dependency_scanning
  allow_failure: false
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"

deploy_dev:
  stage: deploy
  image: alpine:latest
  script:
    - echo "Deploying to development environment..."
    - echo "Container image would be: $CONTAINER_IMAGE"
    - echo "✅ Deployment completed successfully"
  environment:
    name: development
    url: https://dev-api.example.com
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
